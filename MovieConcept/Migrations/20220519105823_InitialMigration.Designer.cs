// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieConcept;

#nullable disable

namespace MovieConcept.Migrations
{
    [DbContext(typeof(imdbOriginalContext))]
    [Migration("20220519105823_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovieConcept.Model.MovieTitle", b =>
                {
                    b.Property<string>("Tconst")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tconst");

                    b.Property<string>("Genres")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("genres");

                    b.Property<string>("OriginalTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("originalTitle");

                    b.Property<string>("PrimaryTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("primaryTitle");

                    b.Property<int>("RuntimeMinutes")
                        .HasColumnType("int")
                        .HasColumnName("runtimeMinutes");

                    b.Property<int>("StartYear")
                        .HasColumnType("int")
                        .HasColumnName("startYear");

                    b.Property<string>("TitleType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("titleType");

                    b.HasKey("Tconst");

                    b.ToTable("titles.movies");
                });

            modelBuilder.Entity("MovieConcept.Model.Principal", b =>
                {
                    b.Property<string>("Gtin")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("gtin");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("Nconst")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nconst");

                    b.Property<int>("Ordering")
                        .HasColumnType("int")
                        .HasColumnName("ordering");

                    b.Property<string>("Tconstt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tconst");

                    b.HasKey("Gtin");

                    b.HasIndex("Tconstt");

                    b.ToTable("principals");
                });

            modelBuilder.Entity("MovieConcept.Model.Rating", b =>
                {
                    b.Property<string>("Tconstr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tconst");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("float")
                        .HasColumnName("averageRating");

                    b.Property<string>("MovieTitleTconst")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumVotes")
                        .HasColumnType("int")
                        .HasColumnName("numVotes");

                    b.HasKey("Tconstr");

                    b.HasIndex("MovieTitleTconst");

                    b.ToTable("titles.ratings");
                });

            modelBuilder.Entity("MovieConcept.Model.Principal", b =>
                {
                    b.HasOne("MovieConcept.Model.MovieTitle", "MovieTitle")
                        .WithMany("Principals")
                        .HasForeignKey("Tconstt");

                    b.Navigation("MovieTitle");
                });

            modelBuilder.Entity("MovieConcept.Model.Rating", b =>
                {
                    b.HasOne("MovieConcept.Model.MovieTitle", null)
                        .WithMany("Ratings")
                        .HasForeignKey("MovieTitleTconst");
                });

            modelBuilder.Entity("MovieConcept.Model.MovieTitle", b =>
                {
                    b.Navigation("Principals");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
